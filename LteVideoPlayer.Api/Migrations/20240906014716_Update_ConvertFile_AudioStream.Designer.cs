// <auto-generated />
using System;
using LteVideoPlayer.Api.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LteVideoPlayer.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240906014716_Update_ConvertFile_AudioStream")]
    partial class Update_ConvertFile_AudioStream
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LteVideoPlayer.Api.Entities.ConvertFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AudioStream")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Errored")
                        .HasColumnType("bit");

                    b.Property<string>("Output")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ConvertFiles");
                });

            modelBuilder.Entity("LteVideoPlayer.Api.Entities.FileHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("PercentWatched")
                        .HasColumnType("real");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("FileHistories");
                });

            modelBuilder.Entity("LteVideoPlayer.Api.Entities.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("LteVideoPlayer.Api.Entities.ConvertFile", b =>
                {
                    b.OwnsOne("LteVideoPlayer.Api.DataTypes.FileEntity", "ConvertedFile", b1 =>
                        {
                            b1.Property<int>("ConvertFileId")
                                .HasColumnType("int");

                            b1.Property<string>("FileName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FilePath")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ConvertFileId");

                            b1.ToTable("ConvertFiles");

                            b1.WithOwner()
                                .HasForeignKey("ConvertFileId");
                        });

                    b.OwnsOne("LteVideoPlayer.Api.DataTypes.FileEntity", "OriginalFile", b1 =>
                        {
                            b1.Property<int>("ConvertFileId")
                                .HasColumnType("int");

                            b1.Property<string>("FileName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FilePath")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ConvertFileId");

                            b1.ToTable("ConvertFiles");

                            b1.WithOwner()
                                .HasForeignKey("ConvertFileId");
                        });

                    b.Navigation("ConvertedFile")
                        .IsRequired();

                    b.Navigation("OriginalFile")
                        .IsRequired();
                });

            modelBuilder.Entity("LteVideoPlayer.Api.Entities.FileHistory", b =>
                {
                    b.HasOne("LteVideoPlayer.Api.Entities.UserProfile", "UserProfile")
                        .WithMany("WatchVideos")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LteVideoPlayer.Api.DataTypes.FileEntity", "FileEntity", b1 =>
                        {
                            b1.Property<int>("FileHistoryId")
                                .HasColumnType("int");

                            b1.Property<string>("FileName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FilePath")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FileHistoryId");

                            b1.ToTable("FileHistories");

                            b1.WithOwner()
                                .HasForeignKey("FileHistoryId");
                        });

                    b.Navigation("FileEntity")
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("LteVideoPlayer.Api.Entities.UserProfile", b =>
                {
                    b.Navigation("WatchVideos");
                });
#pragma warning restore 612, 618
        }
    }
}
