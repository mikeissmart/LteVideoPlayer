//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

import { DirectoryEnum } from './model.enum';

export interface IConvertFile
{
	id: number;
	directoryEnum: DirectoryEnum;
	output: string | null;
	errored: boolean;
	originalFile: IFileDataType;
	convertedFile: IFileDataType;
	audioStreamIndex: number;
	createdDate: Date;
	startedDate: Date | null;
	endedDate: Date | null;
}
export interface IConvertManyFile
{
	converts: IConvertFile[];
}
export interface ICreateConvert
{
	directoryEnum: DirectoryEnum;
	originalFile: IFile;
	convertedFile: IFile;
	audioStreamIndex: number;
}
export interface ICreateManyConvert
{
	converts: ICreateConvert[];
}
export interface IDir
{
	path: string;
	name: string;
	fullPath: string;
}
export interface IDirectoryInfo
{
	friendlyName: string;
	adminViewOnly: boolean;
	dirEnum: DirectoryEnum;
}
export interface IDirsAndFiles
{
	dirs: IDir[];
	files: IFile[];
}
export interface IFileDataType
{
	path: string;
	file: string;
	fullPath: string;
	fileWOExt: string;
	fileExt: string;
}
export interface IFile
{
	path: string;
	file: string;
	fullPath: string;
	fileWOExt: string;
	fileExt: string;
	isConvertQueued: boolean;
}
export interface IMetadata
{
	output: string;
	error: string;
}
export interface IString
{
	data: string;
}
export interface IThumbnailError
{
	id: number;
	timesFailed: number;
	directoryEnum: DirectoryEnum;
	error: string;
	file: IFileDataType;
	lastError: Date;
}
export interface IUserProfile
{
	id: number;
	name: string;
}
export interface IAppLogFilter
{
	logLevel: number | null;
	eventId: number | null;
	eventName: string | null;
	minDate: Date | null;
	maxDate: Date | null;
}
export interface ICronLogFilter
{
	name: string | null;
	cronLogType: number | null;
	isCanceled: boolean | null;
	minDate: Date | null;
	maxDate: Date | null;
}
